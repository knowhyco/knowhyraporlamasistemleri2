#!/bin/bash
echo 'ğŸ§¹ Knowhy Raporlama Sistemi SÄ±fÄ±rlama Scripti ğŸ§¹'
echo '-------------------------------------------'
echo 'Bu script, Knowhy Raporlama Sistemini tamamen sÄ±fÄ±rlar.'
echo 'TÃ¼m sistem tablolarÄ± ve yapÄ±landÄ±rma silinecektir!'
echo ''
read -p 'Devam etmek istiyor musunuz? (evet/hayÄ±r): ' confirm

if [[ $confirm != 'evet' ]]; then
    echo 'Ä°ÅŸlem iptal edildi.'
    exit 1
fi

echo 'Sistem sÄ±fÄ±rlanÄ±yor...'

# Docker containerlarÄ±nÄ± durdur
docker-compose down

# .env dosyasÄ±ndan SYSTEM_ID'yi kaldÄ±r
grep -v 'SYSTEM_ID=' .env > .env.temp
mv .env.temp .env

echo 'SYSTEM_ID .env dosyasÄ±ndan silindi.'

# VeritabanÄ± baÄŸlantÄ± bilgilerini oku
source .env
SUPABASE_DB_URL=$SUPABASE_URL

# SQL komutunu oluÅŸtur
SQL_COMMAND="
DO \$\$ 
BEGIN
    -- TÃ¼m knowhy_ ile baÅŸlayan tablolarÄ± bul ve sil
    FOR table_name IN (
        SELECT table_name 
        FROM information_schema.tables 
        WHERE table_schema = 'public' 
          AND table_name LIKE 'knowhy\\_%' 
    )
    LOOP
        EXECUTE 'DROP TABLE IF EXISTS ' || table_name || ' CASCADE';
        RAISE NOTICE 'Tablo silindi: %', table_name;
    END LOOP;
END \$\$;
"

# SQL'i Ã§alÄ±ÅŸtÄ±r (postgresql istemcisi varsa)
if command -v psql &> /dev/null; then
    echo "SQL sorgusu Ã§alÄ±ÅŸtÄ±rÄ±lÄ±yor..."
    echo "$SQL_COMMAND" | psql "$SUPABASE_DB_URL"
    echo "VeritabanÄ±ndaki knowhy_ tablolarÄ± silindi."
else
    echo "PostgreSQL istemcisi (psql) bulunamadÄ±."
    echo "Knowhy ile baÅŸlayan tÃ¼m tablolarÄ± manuel olarak silmeniz gerekecek."
fi

echo 'Docker containerlarÄ± yeniden baÅŸlatÄ±lÄ±yor...'
docker-compose up -d

echo ''
echo 'âœ… Sistem baÅŸarÄ±yla sÄ±fÄ±rlandÄ±!'
echo 'Kurulum sihirbazÄ± ilk giriÅŸte otomatik olarak aÃ§Ä±lacaktÄ±r.'
